#!/usr/bin/env bash

set -e

if [ -z "$1" ]; then
  echo "Argument not provided. Provide VPC_NAME"
else
  export VPC_NAME="$1"
fi

## Create a VPC
VPC_ID=$(aws ec2 create-vpc \
--cidr-block "172.1.0.0/16" \
--tag-specifications "ResourceType=vpc,Tags=[{Key=Name,Value=$VPC_NAME}]" \
--region us-west-1 \
--query Vpc.VpcId \
--output text)

echo "VPC_ID: $VPC_ID"

# Turn on DNS Hostnames
aws ec2 modify-vpc-attribute \
--vpc-id $VPC_ID \
--enable-dns-hostnames "{\"Value\":true}"

## Create Internet Gateway IGW
IGW_ID=$(aws ec2 create-internet-gateway \
--query InternetGateway.InternetGatewayId \
--output text)

echo "IGW_ID: $IGW_ID"

## Attach IGW
aws ec2 attach-internet-gateway \
--internet-gateway-id $IGW_ID \
--vpc-id $VPC_ID

## Create a subnet
SUBNET_ID=$(aws ec2 create-subnet \
--vpc-id $VPC_ID \
--cidr-block 172.1.0.0/20 \
--query Subnet.SubnetId \
--output text)

echo "SUBNET_ID: $SUBNET_ID"

## Auto assign IPV4
aws ec2 modify-subnet-attribute \
--subnet-id $SUBNET_ID \
--map-public-ip-on-launch

## Get VPC route table ID
ROUTE_TABLE_ID=$(aws ec2 describe-route-tables \
--filters "Name=vpc-id,Values=$VPC_ID" "Name=association.main,Values=true" \
--query "RouteTables[0].RouteTableId" \
--output text)

echo "ROUTE_TABLE_ID: $ROUTE_TABLE_ID"

## Explicitly associate subnet
ASSOCIATE_ID=$(aws ec2 associate-route-table \
--route-table-id $ROUTE_TABLE_ID \
--subnet-id $SUBNET_ID \
--query AssociationId \
--output text)

echo "ASSOCIATE_ID: $ASSOCIATE_ID"

echo "END"

## Add route to route table to our IGW
aws ec2 create-route \
--route-table-id $ROUTE_TABLE_ID \
--destination-cidr-block 0.0.0.0/0 \
--gateway-id $IGW_ID

echo "./delete-vpc $VPC_ID $IGW_ID $SUBNET_ID $ASSOCIATE_ID $ROUTE_TABLE_ID"